generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  password String

  name       String @default("No name")
  avatarPath String @default("https://i1.sndcdn.com/artworks-000581846978-nue3g7-t500x500.jpg") @map("avatar_path")

  role UserRole @default(ADMIN)

  favorites Movie[]
  reviews   Review[]

  @@map("user")
}

model Movie {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title  String
  slug   String @unique
  rating Int

  poster    String
  bigPoster String @map("big_poster")

  year     Int    @default(0)
  duration Int    @default(0)
  country  String @default("")

  views Int @default(0)

  videoUrl String @map("video_url")

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")

  genres  Genre[]
  actors  Actor[]
  reviews Review[]

  @@map("movie")
}

model Genre {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String
  slug        String @unique
  description String

  icon String

  movies Movie[]

  @@map("genre")
}

model Actor {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String
  slug String @unique

  photoUrl    String   @map("photo_url")
  dateOfBirth DateTime @map("date_of_birth")
  birthplace  String

  movies Movie[]

  @@map("actor")
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  rating Int
  text   String

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")

  movie   Movie? @relation(fields: [movieId], references: [id])
  movieId Int?   @map("movie_id")

  @@map("review")
}

enum UserRole {
  USER
  ADMIN
}
